<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>DMTiPACS - Modality</title>

    <!-- Styles  -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <!-- Navbar -->
    @Html.Partial("HomeHeader")

    <!-- Section Side -->
    <section class="software-section">
        <div class="container">
            <div class="row">
                <div class="col-md-2">
                    <div class="list-group">
                        <a href="/Software/Index" class="list-group-item">Dashboard</a>
                        <a href="/Software/Modality" class="list-group-item active">Modality Procedure</a>
                        <a href="/Software/BodyParts" class="list-group-item">Body Parts</a>
                        <a href="/Software/User" class="list-group-item">User</a>
                        <a href="/Software/Rate" class="list-group-item">Rate</a>
                        <a href="/Software/Procedure" class="list-group-item">Procedure</a>
                        <a href="/Software/Reports" class="list-group-item">Reports</a>
                    </div>
                </div>
                <div class="col-md-10">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4>Modality</h4>
                        </div>
                        <div class="panel-heading">
                            <table style="width: 100%" border="0">
                                <tr>
                                    <td style="width: 50%">
                                        <div class="input-group input-group-sm">
                                            <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                            <input type="text" class="form-control input-sm" id="InputFilter" placeholder="Search">
                                        </div>
                                    </td>
                                    <td style="width: 50%" align="right">
                                        <button class="btn btn-primary" onclick="btnAdd_OnClick()">
                                            <i class="fa fa-plus fa-fw"></i>Add
                                        </button>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="panel-body">
                            <div id="grid" class="grid"></div>
                        </div>
                        <div class="panel-footer">
                            <div class="row">
                                <div class="btn-group col-md-7" id="navigationPageGrid">
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                        <span class="glyphicon glyphicon-fast-backward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                        <span class="glyphicon glyphicon-step-backward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                        <span class="glyphicon glyphicon-step-forward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                        <span class="glyphicon glyphicon-fast-forward"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <!-- Add Modal -->
                        <div class="modal fade" id="addModality" role="dialog">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <form id="formModality" role="form">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                            <h4 id="modal-title" class="modal-title">Add Modality Procedure</h4>
                                        </div>
                                        <div class="modal-body">
                                            <div class="form-group">
                                                <label>Modality Procedure</label><br />
                                                <input id="modalProcedure" type="text" class="form-control" />
                                            </div>
                                            <div class="form-group">
                                                <label>Result Template</label><br />
                                                <textarea id="resultTemplate" rows="10" class="form-control"></textarea>
                                            </div>
                                            <div class="form-group">
                                                <label>Modality</label><br />
                                                <div id="cmbModality"></div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button id="btnSave" type="button" class="btn btn-primary btn-outline text-right">Save changes</button>
                                        </div>
                                    </form> 
                                </div>
                            </div>
                        </div>
                        <!-- Delete Modal -->
                        <div class="modal fade" id="deleteModality" role="dialog">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <form role="form">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                            <h4 id="modal-title" class="modal-title">Delete Modality Procedure</h4>
                                        </div>
                                        <div class="modal-body">
                                            <p>Are you sure you want to delete this modality ?</p>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" onclick="deleteData()" class="btn btn-danger btn-outline text-right">Yes</button>
                                            <button type="button" data-dismiss="modal" class="btn btn-primary btn-outline text-right">No</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        //================
        // Global variables
        // ================
        var collection;
        var grid;
        var edit;
        var list;
        var modality;
        var cmbModality;
        var observableArray;

        var btnFirstPageGrid4;
        var btnPreviousPageGrid;
        var btnNextPageGrid;
        var btnLastPageGrid;
        var btnCurrentPageGrid;


        // =============================
        // Get PeriodMasterList Data
        // =============================

        function initList() {
            var results = list;
            observableArray = new wijmo.collections.ObservableArray();
            if (results.length > 0) {
                for (i = 0; i < results.length; i++) {
                    observableArray.push({
                        Id: results[i]["Id"],
                        Modality: results[i]["Modality"],
                        ModalityId: results[i]["ModalityId"],
                        ModalityProcedure: results[i]["ModalityProcedure"],
                        ModalityResultTemplate: results[i]["ModalityResultTemplate"]
                    });
                }
                collection = new wijmo.collections.CollectionView(observableArray)
            } else {
                /*   alert("No data."); */
            }
        }

        function initGrid() {
            btnCurrentPageGrid.innerHTML = (collection.pageIndex + 1) + ' / ' + collection.pageCount;

            collection.canFilter = true;
            collection.pageSize = 15;

            //Filter
            var filterText = '';
            $('#InputFilter').keydown(function () {
                filterText = this.value.toLowerCase();
                collection.refresh();
            });
            collection.filter = function (item) {
                return !filterText || (item.ModalityProcedure.toLowerCase().indexOf(filterText) > -1);
            }
            collection.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsCollection();

            });
            collection.currentChanged.addHandler(function (sender, args) {
                updateNavigateButtonsCollection();
            });


            //Flex Grid
            grid = new wijmo.grid.FlexGrid('#grid');
            grid.initialize({
                columns: [
                    {
                        "header": " ",
                        "binding": "EditId",
                        "width": 60,
                        "align": "center",
                        "isContentHtml": true
                    },
                    {
                        "header": " ",
                        "binding": "DeleteId",
                        "width": 70,
                        "align": "center",
                        "isContentHtml": true

                    },
                    {
                        "header": "Modality",
                        "binding": "Modality",
                        "align": "left",
                        "allowSorting": true,
                        "isContentHtml": true,
                        "width": "2*"
                    },
                    {
                        "header": "Modality Procedure",
                        "binding": "ModalityProcedure",
                        "align": "left",
                        "allowSorting": true,
                        "isContentHtml": true,
                        "width": "5*"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: collection,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row,
                itemFormatter : function(panel, r, c, cell) {
                    var col = panel.columns[c];
                    if (col.binding == "EditId") {
                        if (cell.innerHTML != " ") {
                            cell.innerHTML = "<button class='btn btn-primary btn-xs btn-block' id='editButton' onclick='cmdEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>"
                        }
                    }
                    if (col.binding == "DeleteId") {
                        if (cell.innerHTML != " ") {
                            cell.innerHTML =  "<button class='btn btn-danger btn-xs btn-block' id='deleteButton' onclick='cmdDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>"
                        }
                    }
                }
            });

            grid.trackChanges = true;


            btnFirstPageGrid.addEventListener('click', function () {
                collection.moveToFirstPage();
                updateNavigateButtonsCollection();
            });
            btnPreviousPageGrid.addEventListener('click', function () {
                collection.moveToPreviousPage();
                updateNavigateButtonsCollection();
            });
            btnNextPageGrid.addEventListener('click', function () {
                collection.moveToNextPage();
                updateNavigateButtonsCollection();
            });
            btnLastPageGrid.addEventListener('click', function () {
                collection.moveToLastPage();
                updateNavigateButtonsCollection();
            });
        }

        function initModality() {
            var source = new wijmo.collections.ObservableArray();

            for (var m of modality) {
                source.push(m.Modality);
            }

            cmbModality.itemsSource = source;
        }

        // ==================
        // Navigation Buttons
        // ==================
        function updateNavigateButtonsCollection() {
            if (collection.pageSize <= 0) {
                document.getElementById('navigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGrid').style.display = 'block';
            if (collection.pageIndex === 0) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            } else if (collection.pageIndex === (collection.pageCount - 1)) {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (collection.pageIndex + 1) + ' / ' + collection.pageCount;

        }

        function getMasterList(callback) {
            $.ajax({
                url: '/api/modalityProcedure/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    callback(results)
                }
            });
        }

        function getModality(callback) {
            $.ajax({
                url: '/api/modality/list',
                cache : false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    callback(results)
                }
            });
        }



        //============
        // Add data
        // ============

        function addData() {
            modalityData = createModality();
            console.log(modalityData.ModalityProcedure);
            if (!validate(modalityData)) {
                console.log('invalid input');
            }
            else {
                $.ajax({
                    url: '/api/modalityProcedure/add',
                    type: 'POST',
                    cache: false,
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(modalityData),
                    dataType: 'json',
                    statusCode: {
                        200: function () {
                            console.log('added successfully');
                            $('#addModality').modal('hide');
                            getMasterList(function (results) {
                                if (results && results.length > 0) {
                                    list = results;
                                    initList();
                                    console.log('asa');
                                }
                            });
                        },
                        404: function () {
                            console.log('something went wrong.');
                        },
                        400: function () {
                            console.log('something went wrong.');
                        }
                    }
                });
            }
        }


        //============
        // Edit data
        // ============

        function editData() {
            var modalityData = collection.currentItem;
            editData = createModality();

            if (!validate(editData)) {
                console.log('invalid input');
            }
            else {
                $.ajax({
                    url: '/api/modalityProcedure/update/' + modalityData.Id,
                    type: 'PUT',
                    cache: false,
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(editData),
                    dataType: 'json',
                    statusCode: {
                        200: function () {
                            console.log('edited successfully');
                            $('#addModality').modal('hide');
                        },
                        404: function () {
                            console.log('something went wrong.');
                        },
                        400: function () {
                            console.log('something went wrong.');
                        }
                    }
                });
            }
        }

        //============
        // Delete data
        // ============

        function deleteData() {
            var modalityData = collection.currentItem;

            $.ajax({
                url: '/api/modalityProcedure/delete/' + modalityData.Id,
                type: 'DELETE',
                statusCode: {
                    200: function () {
                        console.log('deleted successfully');
                        $('#deleteModality').modal('hide');
                        collection.remove(modalityData);
                    },
                    404: function () {
                        console.log('something went wrong.');
                    },
                    400: function () {
                        console.log('something went wrong.');
                    }
                }
            });

            console.log(modalityData);
        }

        function btnAdd_OnClick() {
            document.getElementById('modal-title').innerHTML = "Add Modality Procedure";
            document.getElementById('btnSave').onclick = addData;
          
            clearFields();

            $('#addModality').modal({
                "show": true,
                "backdrop": "static"
            });
        }


        function cmdDeleteButton_OnClick() {
            $('#deleteModality').modal({
                "show": true,
                "backdrop": "static"
            });
        }

        function cmdEditButton_OnClick() {
            document.getElementById('modal-title').innerHTML = "Edit Modality Procedure";
            document.getElementById('btnSave').onclick = editData;
            var modalityData = collection.currentItem;

            setEditFields(modalityData);

            $('#addModality').modal({
                "show": true,
                "backdrop": "static"
            });
        }

        //======================
        // set edit modal fields
        // =====================

        function setEditFields() {
            var modalityData = collection.currentItem;
            document.getElementById('modalProcedure').value = modalityData.ModalityProcedure;
            document.getElementById('resultTemplate').value = modalityData.ModalityResultTemplate;
            document.getElementById('cmbModality').selectedItem = modalityData.Modality;

            console.log(document.getElementById('cmbModality').selectedItem);
        }

        function clearFields() {
            document.getElementById('modalProcedure').value = "";
            document.getElementById('resultTemplate').value = "";
            document.getElementById('cmbModality').selectedIndex = 0;
        }

        //=================
        // Create modality
        // ================
        function createModality() {
            var modalityId = modality[cmbModality.selectedIndex].Id;
            var modalityProcedure = document.getElementById('modalProcedure').value;
            var templateResult = document.getElementById('resultTemplate').value;

            var data = {
                ModalityId: modalityId,
                ModalityProcedure: modalityProcedure,
                ModalityResultTemplate: templateResult
            }

            console.log(modalityId);

            return data;
        }

        //=================
        // Validate
        // ================

        function validate(modalityObject) {
            if (!validateModalityProc(modalityObject.ModalityProcedure)) {
                return false;
            }
            else if (!validateResultTemp(modalityObject.ModalityResultTemplate)) {
                return false;
            }
            return true;
        }

        function validateModalityProc(modalityProcedure) {
            if (modalityProcedure == undefined) {
                return false;
            }
            return true;
        }

        function validateResultTemp(resultTemplate) {
            if (resultTemplate == undefined) {
                return false;
            }
            return true;
        }

        //============
        // On Page Load
        // ============
        $(document).ready(function () {

            // Navigation button
            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            //combobox
            cmbModality = new wijmo.input.ComboBox('#cmbModality');

            getModality(function (results) {
                if (results.length > 0) {
                    modality = results;
                    initModality();
                }
            });
            //Collection View
            getMasterList(function (results) {
                if (results && results.length > 0) {
                    list = results;
                    initList();
                    initGrid();
                }
            });

        });

    </script>
</body>
</html>
