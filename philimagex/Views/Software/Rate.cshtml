<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>DMTiPACS - Rate</title>

    <!-- Styles  -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <!-- Navbar -->
    @Html.Partial("HomeHeader")

    <!-- Section Side -->
    <section class="software-section">
        <div class="container">
            <nav class="navbar navbar-default">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" href="#" onclick="btnDashboardOnclick()">Dashboard</a>
                </div>
                <div class="collapse navbar-collapse" id="myNavbar">
                    <ul class="nav navbar-nav navbar-right">
                        <li><a href="#" onclick="btnModalityProcedureOnclick()">Modality Procedure</a></li>
                        <li><a href="#" onclick="btnBodyPartsOnclick()">Body Parts</a></li>
                        <li><a href="#" onclick="btnUserOnclick()">User</a></li>
                        <li class="active"><a href="#" onclick="btnRateOnclick()">Rate</a></li>
                        <li><a href="#" onclick="btnProcedureOnclick()">Procedure</a></li>
                        <li><a href="#" onclick="btnReportsOnclick()">Reports</a></li>
                    </ul>
                </div>
            </nav>
            <div class="panel panel-default">
                <!-- BODY -->
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4>Doctor Rates</h4>
                    </div>
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 50%">
                                    <div class="input-group input-group-sm">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control input-sm" id="InputFilter" placeholder="Search">
                                    </div>
                                </td>
                                <td style="width: 50%" align="right">
                                    <button class="btn btn-primary" onclick="btnAdd_OnClick()"><i class="fa fa-plus fa-fw"></i>Add</button>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-body">
                        <table id="grid" class="grid border-custom"></table>
                    </div>
                    <div class="panel-footer">
                        <div class="row">
                            <div class="btn-group col-md-7" id="navigationPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Add Modal -->
                <div class="modal fade" id="modal" role="dialog">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                <h4 id="modal-title" class="modal-title">Add</h4>
                            </div>
                            <div class="modal-body">
                                <div class="form-group">
                                    <label>Facility</label><br />
                                    <div id="cmbFacility"></div>
                                </div>

                                <div class="form-group">
                                    <label>Procedure</label><br />
                                    <div id="cmbProcedure"></div>
                                </div>

                                <div class="form-group">
                                    <label>Facility Rate</label><br />
                                    <input id="facilityRate" type="text" class="form-control" />
                                </div>

                                <div class="form-group">
                                    <label>Doctor Rate</label><br />
                                    <input id="doctorRate" type="text" class="form-control" />
                                </div>

                                <div class="form-group">
                                    <label>Image Rate</label><br />
                                    <input id="imageRate" type="text" class="form-control" />
                                </div>

                                <div class="form-group">
                                    <label>Remarks</label><br />
                                    <textarea id="remarks" rows="10" class="form-control"></textarea>
                                </div>

                            </div>
                            <div class="modal-footer">
                                <button id="btnSaveChanges" type="button" class="btn btn-primary btn-outline text-right">Save changes</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Delete Modal -->
                <div class="modal fade" id="deleteModal" role="dialog">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <form role="form">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                    <h4 id="modal-title" class="modal-title">Delete Rate</h4>
                                </div>
                                <div class="modal-body">
                                    <p>Are you sure you want to delete this Rate?</p>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" onclick="deleteItem()" class="btn btn-danger btn-outline text-right">Yes</button>
                                    <button type="button" data-dismiss="modal" class="btn btn-primary btn-outline text-right">No</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- BODY -->
            </div>
        </div>
    </section>

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        //================
        // Global variables
        // ================
        var collection;
        var flexGrid;

        var facility;
        var cmbFacility;
        var procedure;
        var cmbProcedure;

        var btnFirstPageGrid4;
        var btnPreviousPageGrid;
        var btnNextPageGrid;
        var btnLastPageGrid;
        var btnCurrentPageGrid;

        // =============================
        // Get MasterList Data
        // =============================
        function initList(list) {
            var results = list;
            var observableArray = new wijmo.collections.ObservableArray();
            if (results.length > 0) {
                for (i = 0; i < results.length; i++) {
                    observableArray.push({
                        EditId: "<button class='btn btn-primary btn-xs btn-block' id='editButton' onclick='btnEdit_OnClick()'><i class='fa fa-edit fa-faw'></i> Edit</button>",
                        DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='deleteButton' onclick='btnDelete_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                        Id: results[i]["Id"],
                        ModalityProcedure: results[i]["ModalityProcedure"],
                        Facility: results[i]["Facility"],
                        FacilityRate: results[i]["FacilityRate"],
                        DoctorRate: results[i]["DoctorRate"],
                        ImageRate: results[i]["ImageRate"],
                        Remarks: results[i]["Remarks"]

                    });
                }
                collection = new wijmo.collections.CollectionView(observableArray);
                btnCurrentPageGrid.innerHTML = (collection.pageIndex + 1) + ' / ' + collection.pageCount;

                collection.canFilter = true;
                collection.pageSize = 10;

                //Filter
                var filterText = '';

                $('#InputFilter').keyup(function () {
                    filterText = this.value.toLowerCase();
                    collection.refresh();
                });

                collection.filter = function (item) {
                    return !filterText || (item.ModalityProcedure.toLowerCase().indexOf(filterText) > -1);
                }
                collection.collectionChanged.addHandler(function (sender, args) {
                    updateNavigateButtonsCollection();

                });
                collection.currentChanged.addHandler(function (sender, args) {
                    updateNavigateButtonsCollection();
                });


                //Flex Grid
                flexGrid = new wijmo.grid.FlexGrid('#grid');
                flexGrid.initialize({
                    columns: [
                    {
                        "header": "Edit",
                        "binding": "EditId",
                        "width": 60,
                        "align": "center",
                        "isContentHtml": true
                    },
                    {
                        "header": "Delete",
                        "binding": "DeleteId",
                        "width": 70,
                        "align": "center",
                        "isContentHtml": true

                    },
                    {
                        "header": "Facility",
                        "binding": "Facility",
                        "align": "left",
                        "allowSorting": true,
                        "isContentHtml": true,
                        "width": "2*"
                    },
                    {
                        "header": "Procedure",
                        "binding": "ModalityProcedure",
                        "align": "left",
                        "allowSorting": true,
                        "isContentHtml": true,
                        "width": "2*"
                    },
                    {
                        "header": "Facility Rate",
                        "binding": "FacilityRate",
                        "align": "right",
                        "allowSorting": true,
                        "isContentHtml": true,
                        "width": "2*"
                    },
                    {
                        "header": "Doctor Rate",
                        "binding": "DoctorRate",
                        "align": "right",
                        "allowSorting": true,
                        "isContentHtml": true,
                        "width": "2*"
                    },
                    {
                        "header": "Image Rate",
                        "binding": "ImageRate",
                        "align": "right",
                        "allowSorting": true,
                        "isContentHtml": true,
                        "width": "2*"
                    }
                    ],
                    autoGenerateColumns: false,
                    itemsSource: collection,
                    isReadOnly: true,
                    autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                    allowDragging: wijmo.grid.AllowDragging.None,
                    selectionMode: wijmo.grid.SelectionMode.Row
                });

                flexGrid.trackChanges = true;

                updateNavigateButtonsCollection();

                btnFirstPageGrid.addEventListener('click', function () {
                    collection.moveToFirstPage();
                    updateNavigateButtonsCollection();
                });
                btnPreviousPageGrid.addEventListener('click', function () {
                    collection.moveToPreviousPage();
                    updateNavigateButtonsCollection();
                });
                btnNextPageGrid.addEventListener('click', function () {
                    collection.moveToNextPage();
                    updateNavigateButtonsCollection();
                });
                btnLastPageGrid.addEventListener('click', function () {
                    collection.moveToLastPage();
                    updateNavigateButtonsCollection();
                });
            } else {
                /*   alert("No data."); */
            }
        }

        // ==================
        // Navigation Buttons
        // ==================
        function updateNavigateButtonsCollection() {
            if (collection.pageSize <= 0) {
                document.getElementById('navigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGrid').style.display = 'block';
            if (collection.pageCount === 1) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else if (collection.pageIndex === 0) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            } else if (collection.pageIndex === (collection.pageCount - 1)) {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (collection.pageIndex + 1) + ' / ' + collection.pageCount;

        }

        function btnAdd_OnClick() {
            document.getElementById('modal-title').innerHTML = "Add Doctor Rate";
            document.getElementById('btnSaveChanges').onclick = addItem;

            cmbFacility.selectedIndex = 0;
            cmbProcedure.selectedIndex = 0;
            document.getElementById('facilityRate').value = "";
            document.getElementById('doctorRate').value = "";
            document.getElementById('imageRate').value = "";

            document.getElementById('remarks').value = "";

            $('#modal').modal({
                "show": true,
                "backdrop": "static"
            });

        }

        function btnEdit_OnClick() {
            document.getElementById('modal-title').innerHTML = "Edit Doctor Rate";
            document.getElementById('btnSaveChanges').onclick = editItem;

            var item = collection.currentItem;
            cmbFacility.selectedItem = item.Facility;
            cmbProcedure.selectedItem = item.ModalityProcedure;
            document.getElementById('facilityRate').value = item.FacilityRate;
            document.getElementById('doctorRate').value = item.DoctorRate;
            document.getElementById('imageRate').value = item.ImageRate;
            document.getElementById('remarks').value = item.Remarks;

            $('#modal').modal({
                "show": true,
                "backdrop": "static"
            });
        }


        function btnDelete_OnClick() {
            $('#deleteModal').modal({
                "show": true,
                "backdrop": "static"
            });

            document.getElementById('modal-title').innerHTML = "Delete User Type";
        }

        function getProcedures(callback) {
            $.ajax({
                url: '/api/modalityProcedure/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    callback(results)
                }
            });
        }

        function getFacilities(callback) {
            $.ajax({
                url: '/api/user/listByUserTypeId/1',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    callback(results)
                }
            });
        }

        function getMasterList(callback) {
            $.ajax({
                url: '/api/userRate/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    callback(results)
                }
            });
        }

        function addItem() {
            $.ajax({
                url: '/api/userRate/add',
                cache: false,
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: createData(),
                success: function (results) {
                    alert("Success");
                    $('#modal').modal('hide');
                    //collection.addItem();
                },
                error: function (results) {
                    alert("Error");
                    $('#modal').modal('hide');
                }
            });
        }

        function editItem() {

            $.ajax({
                url: '/api/userRate/update/' + collection.currentItem.Id,
                type: 'PUT',
                cache: false,
                contentType: 'application/json; charset=utf-8',
                data: createData(),
                dataType: 'json',
                statusCode: {
                    200: function () {
                        console.log('edit successful');
                        $('#modal').modal('hide');
                    },
                    404: function (something) {
                        console.log('something went wrong.');
                        $('#modal').modal('hide');
                    },
                    400: function (something) {
                        console.log('something went wrong.');
                        $('#modal').modal('hide');
                    }
                }
            });
        }



        function deleteItem() {
            var item = collection.currentItem;

            $.ajax({
                url: '/api/userRate/delete/' + item.Id,
                type: 'DELETE',
                statusCode: {
                    200: function () {
                        console.log('delete successfully');
                        $('#deleteModal').modal('hide');
                        collection.remove(item);
                    },
                    404: function () {
                        console.log('something went wrong.');
                        $('#deleteModal').modal('hide');
                    },
                    400: function () {
                        console.log('something went wrong.');
                        $('#deleteModal').modal('hide');
                    }
                }
            });

            console.log(modalityData);
        }


        function createData() {

            var nFacility = facility[cmbFacility.selectedIndex].Id;
            var NProcedure = procedure[cmbProcedure.selectedIndex].Id;

            var nFacilityRate = document.getElementById('facilityRate').value;
            var nDoctorRate = document.getElementById('doctorRate').value;
            var nImageRate = document.getElementById('imageRate').value;

            var nRemarks = document.getElementById('remarks').value;


            var data = {
                UserId: nFacility,
                ModalityProcedureId: NProcedure,
                ModalityProcedureCode: "00000000",
                FacilityRate: nFacilityRate,
                DoctorRate: nDoctorRate,
                ImageRate: nImageRate,
                Remarks: nRemarks
            }

            return JSON.stringify(data);
        }

        function btnDashboardOnclick() {
            window.location = "/Software/Index?facilityId=" + getUrlParameter("facilityId");
        }

        function btnModalityProcedureOnclick() {
            window.location = "/Software/Modality?facilityId=" + getUrlParameter("facilityId");
        }

        function btnBodyPartsOnclick() {
            window.location = "/Software/BodyParts?facilityId=" + getUrlParameter("facilityId");
        }

        function btnUserOnclick() {
            window.location = "/Software/Users?facilityId=" + getUrlParameter("facilityId");
        }

        function btnRateOnclick() {
            window.location = "/Software/Rate?facilityId=" + getUrlParameter("facilityId");
        }

        function btnProcedureOnclick() {
            window.location = "/Software/Procedure?facilityId=" + getUrlParameter("facilityId");
        }

        function btnReportsOnclick() {
            window.location = "/Software/Reports?facilityId=" + getUrlParameter("facilityId");
        }

        //============
        // On Page Load
        // ============
        $(document).ready(function () {

            // Navigation button
            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');


            //Collection View
            getMasterList(function (results) {
                if (results && results.length > 0) {
                    initList(results);
                }
            });


            cmbFacility = new wijmo.input.ComboBox('#cmbFacility');
            cmbProcedure = new wijmo.input.ComboBox('#cmbProcedure');

            getProcedures(function (results) {
                procedure = results;
                if (results.length > 0) {
                    var source = new wijmo.collections.ObservableArray();

                    for (var i = 0; i < results.length; i++) {
                        var m = procedure[i];
                        source.push(m.ModalityProcedure);
                    }

                    cmbProcedure.itemsSource = source;
                }
            });

            getFacilities(function (results) {
                facility = results;
                if (results.length > 0) {
                    var source = new wijmo.collections.ObservableArray();

                    for (var i = 0; i < results.length; i++) {
                        var m = facility[i];
                        source.push(m.FullName);
                    }

                    cmbFacility.itemsSource = source;
                }
            });

        });
    </script>
</body>
</html>
