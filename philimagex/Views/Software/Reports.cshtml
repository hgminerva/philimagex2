<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>DMTiPACS - Procedure Reports</title>

    <!-- Styles  -->
    @Styles.Render("~/Content/css")
</head>
<body>
    <!-- Navbar -->
    @Html.Partial("HomeHeader")

    <!-- Section Side -->
    <section class="software-section">
        <div class="container">
            <nav class="navbar navbar-default">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" href="#" onclick="btnDashboardOnclick()">Dashboard</a>
                </div>
                <div class="collapse navbar-collapse" id="myNavbar">
                    <ul class="nav navbar-nav navbar-right">
                        <li><a href="#" onclick="btnModalityProcedureOnclick()">Modality Procedure</a></li>
                        <li><a href="#" onclick="btnBodyPartsOnclick()">Body Parts</a></li>
                        <li><a href="#" onclick="btnUserOnclick()">User</a></li>
                        <li><a href="#" onclick="btnRateOnclick()">Rate</a></li>
                        <li><a href="#" onclick="btnProcedureOnclick()">Procedure</a></li>
                        <li class="active"><a href="#" onclick="btnReportsOnclick()">Reports</a></li>
                    </ul>
                </div>
            </nav>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4>Procedure Reports</h4>
                </div>
                <div class="panel-body">
                    <ul class="nav nav-tabs">
                        <li class="active"><a data-toggle="tab" id="procedureSummaryTab" href="#procedureSummary">Procedure Summary</a></li>
                        <li><a data-toggle="tab" id="procedureDetailTab" href="#procedureDetail">Procedure Detail</a></li>
                    </ul>
                    <br />
                    <div class="tab-content">
                        <div id="procedureSummary" class="tab-pane fade in active">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <table border="0">
                                        <tr>
                                            <td>
                                                <div class="input-group input-group-sm">
                                                    <span class="input-group-addon">Start Date</span>
                                                    <div class="comboBox-wide" id="procedureSummaryStartDate"></div>
                                                </div>
                                            </td>
                                            <td>&nbsp;&nbsp;</td>
                                            <td>
                                                <div class="input-group input-group-sm">
                                                    <span class="input-group-addon">End Date</span>
                                                    <div class="comboBox-wide" id="procedureSummaryEndDate"></div>
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <div class="panel-heading">
                                    <h4>Procedure Summary Report</h4>
                                </div>
                                <div class="panel-body">
                                    <div id="procedureSummaryFlexGrid" class="grid"></div>
                                </div>
                                <div class="panel-footer">
                                    <div class="row">
                                        <div class="btn-group col-md-7" id="navigationPageGridProcedureSummary">
                                            <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGridProcedureSummary">
                                                <span class="glyphicon glyphicon-fast-backward"></span>
                                            </button>
                                            <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGridProcedureSummary">
                                                <span class="glyphicon glyphicon-step-backward"></span>
                                            </button>
                                            <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGridProcedureSummary"></button>
                                            <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGridProcedureSummary">
                                                <span class="glyphicon glyphicon-step-forward"></span>
                                            </button>
                                            <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGridProcedureSummary">
                                                <span class="glyphicon glyphicon-fast-forward"></span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="procedureDetail" class="tab-pane fade">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <table border="0">
                                        <tr>
                                            <td>
                                                <div class="input-group input-group-sm">
                                                    <span class="input-group-addon">Start Date</span>
                                                    <div class="comboBox-wide" id="procedureDetailStartDate"></div>
                                                </div>
                                            </td>
                                            <td>&nbsp;&nbsp;</td>
                                            <td>
                                                <div class="input-group input-group-sm">
                                                    <span class="input-group-addon">End Date</span>
                                                    <div class="comboBox-wide" id="procedureDetailEndDate"></div>
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <div class="panel-heading">
                                    <h4>Procedure Detail Report</h4>
                                </div>
                                <div class="panel-body">
                                    <div id="procedureDetailFlexGrid" class="grid"></div>
                                </div>
                                <div class="panel-footer">
                                    <div class="row">
                                        <div class="btn-group col-md-7" id="navigationPageGridProcedureDetail">
                                            <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGridProcedureDetail">
                                                <span class="glyphicon glyphicon-fast-backward"></span>
                                            </button>
                                            <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGridProcedureDetail">
                                                <span class="glyphicon glyphicon-step-backward"></span>
                                            </button>
                                            <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGridProcedureDetail"></button>
                                            <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGridProcedureDetail">
                                                <span class="glyphicon glyphicon-step-forward"></span>
                                            </button>
                                            <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGridProcedureDetail">
                                                <span class="glyphicon glyphicon-fast-forward"></span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Scripts -->
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script type="text/javascript">
        // Global variables
        var newDate = new Date();
        var cboProcedureSummaryStartDate;
        var summaryStartDateValue = [newDate.getMonth() + 1, newDate.getDate(), newDate.getFullYear()].join('-');
        var cboProcedureSummaryEndDate;
        var summaryEndDateValue = [newDate.getMonth() + 1, newDate.getDate(), newDate.getFullYear()].join('-');
        var cboProcedureDetailStartDate;
        var detailStartDateValue = [newDate.getMonth() + 1, newDate.getDate(), newDate.getFullYear()].join('-');
        var cboProcedureDetailEndDate;
        var detailEndDateValue = [newDate.getMonth() + 1, newDate.getDate(), newDate.getFullYear()].join('-');


        var procedureSummaryCollectionView;
        var procedureSummaryFlexGrid;
        var procedureDetailCollectionView;
        var procedureDetailFlexGrid;

        var btnFirstPageGridProcedureSummary;
        var btnPreviousPageGridProcedureSummary;
        var btnNextPageGridProcedureSummary;
        var btnLastPageGridProcedureSummary;
        var btnCurrentPageGridProcedureSummary;

        var btnFirstPageGridProcedureDetail;
        var btnPreviousPageGridProcedureDetail;
        var btnNextPageGridProcedureDetail;
        var btnLastPageGridProcedureDetail;
        var btnCurrentPageGridProcedureDetail;

        var isFirstSelectSummary = false;

        // get summary start date
        function getProcedureSummaryStartDate() {
            cboProcedureSummaryStartDate.dispose();
            cboProcedureSummaryStartDate = new wijmo.input.InputDate('#procedureSummaryStartDate', {
                format: 'MM-dd-yyyy',
                value: new Date(summaryStartDateValue),
                mask: '99-99-9999',
                max: new Date(summaryEndDateValue),
                onValueChanged: function () {
                    var thisDateValue = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                    summaryStartDateValue = thisDateValue;

                    setTimeout(function () {
                        getProcedureSummaryEndDate();
                    }, 50);

                    NProgress.start();

                    procedureSummaryCollectionView = new wijmo.collections.CollectionView(getProcedureSummaryReportData());
                    procedureSummaryCollectionView.canFilter = true;
                    procedureSummaryCollectionView.pageSize = 15;

                    procedureSummaryCollectionView.collectionChanged.addHandler(function (sender, args) {
                        updateNavigateButtonsForProcedureSummaryFlexGrid();
                    });

                    // Flex Grid
                    procedureSummaryFlexGrid.itemsSource = procedureSummaryCollectionView;
                    procedureSummaryFlexGrid.trackChanges = true;
                }
            });
        }

        // get summary end date
        function getProcedureSummaryEndDate() {
            cboProcedureSummaryEndDate.dispose();
            cboProcedureSummaryEndDate = new wijmo.input.InputDate('#procedureSummaryEndDate', {
                format: 'MM-dd-yyyy',
                value: new Date(summaryEndDateValue),
                mask: '99-99-9999',
                min: new Date(summaryStartDateValue),
                onValueChanged: function () {
                    var thisDateValue = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                    summaryEndDateValue = thisDateValue;

                    setTimeout(function () {
                        getProcedureSummaryStartDate();
                    }, 50);

                    NProgress.start();

                    procedureSummaryCollectionView = new wijmo.collections.CollectionView(getProcedureSummaryReportData());
                    procedureSummaryCollectionView.canFilter = true;
                    procedureSummaryCollectionView.pageSize = 15;

                    procedureSummaryCollectionView.collectionChanged.addHandler(function (sender, args) {
                        updateNavigateButtonsForProcedureSummaryFlexGrid();
                    });

                    // Flex Grid
                    procedureSummaryFlexGrid.itemsSource = procedureSummaryCollectionView;
                    procedureSummaryFlexGrid.trackChanges = true;
                }
            });
        }

        // get detail start date
        function getProcedureDetailStartDate() {
            cboProcedureDetailStartDate.dispose();
            cboProcedureDetailStartDate = new wijmo.input.InputDate('#procedureDetailStartDate', {
                format: 'MM-dd-yyyy',
                value: new Date(detailStartDateValue),
                mask: '99-99-9999',
                max: new Date(detailEndDateValue),
                onValueChanged: function () {
                    var thisDateValue = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                    detailStartDateValue = thisDateValue;

                    setTimeout(function () {
                        getProcedureDetailEndDate();
                    }, 50);

                    NProgress.start();

                    procedureDetailCollectionView = new wijmo.collections.CollectionView(getProcedureDetailReportData());
                    procedureDetailCollectionView.canFilter = true;
                    procedureDetailCollectionView.pageSize = 15;

                    procedureDetailCollectionView.collectionChanged.addHandler(function (sender, args) {
                        updateNavigateButtonsForProcedureDetailFlexGrid();
                    });

                    // Flex Grid
                    procedureDetailFlexGrid.itemsSource = procedureDetailCollectionView;
                    procedureDetailFlexGrid.trackChanges = true;
                }
            });
        }

        // get detail end date
        function getProcedureDetailEndDate() {
            cboProcedureDetailEndDate.dispose();
            cboProcedureDetailEndDate = new wijmo.input.InputDate('#procedureDetailEndDate', {
                format: 'MM-dd-yyyy',
                value: new Date(detailEndDateValue),
                mask: '99-99-9999',
                min: new Date(detailStartDateValue),
                onValueChanged: function () {
                    var thisDateValue = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                    detailEndDateValue = thisDateValue;

                    setTimeout(function () {
                        getProcedureDetailStartDate();
                    }, 50);

                    NProgress.start();

                    procedureDetailCollectionView = new wijmo.collections.CollectionView(getProcedureDetailReportData());
                    procedureDetailCollectionView.canFilter = true;
                    procedureDetailCollectionView.pageSize = 15;

                    procedureDetailCollectionView.collectionChanged.addHandler(function (sender, args) {
                        updateNavigateButtonsForProcedureDetailFlexGrid();
                    });

                    // Flex Grid
                    procedureDetailFlexGrid.itemsSource = procedureDetailCollectionView;
                    procedureDetailFlexGrid.trackChanges = true;
                }
            });
        }

        // procedure summary report data
        function getProcedureSummaryReportData() {
            var summaryStartDateParameterValue = [cboProcedureSummaryStartDate.value.getMonth() + 1, cboProcedureSummaryStartDate.value.getDate(), cboProcedureSummaryStartDate.value.getFullYear()].join('-');
            var summaryEndDateParameterValue = [cboProcedureSummaryEndDate.value.getMonth() + 1, cboProcedureSummaryEndDate.value.getDate(), cboProcedureSummaryEndDate.value.getFullYear()].join('-');

            var procedureSummaryArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/procedure/listByDateRange/' + summaryStartDateParameterValue + "/" + summaryEndDateParameterValue,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (procedureSummaryListResult) {
                    if (procedureSummaryListResult.length > 0) {
                        for (i = 0; i < procedureSummaryListResult.length; i++) {
                            procedureSummaryArray.push({
                                Id: procedureSummaryListResult[i]["Id"],
                                TransactionNumber: procedureSummaryListResult[i]["TransactionNumber"],
                                TransactionDateTime: procedureSummaryListResult[i]["TransactionDateTime"],
                                TransactionTime: procedureSummaryListResult[i]["TransactionTime"],
                                DICOMFileName: procedureSummaryListResult[i]["DICOMFileName"],
                                PatientName: procedureSummaryListResult[i]["PatientName"],
                                Gender: procedureSummaryListResult[i]["Gender"],
                                DateOfBirth: procedureSummaryListResult[i]["DateOfBirth"],
                                Age: procedureSummaryListResult[i]["Age"],
                                Particulars: procedureSummaryListResult[i]["Particulars"],
                                ModalityId: procedureSummaryListResult[i]["ModalityId"],
                                Modality: procedureSummaryListResult[i]["Modality"],
                                BodyPartId: procedureSummaryListResult[i]["BodyPartId"],
                                BodyPart: procedureSummaryListResult[i]["BodyPart"],
                                UserId: procedureSummaryListResult[i]["UserId"],
                                User: procedureSummaryListResult[i]["User"],
                                Facility: procedureSummaryListResult[i]["Facility"],
                                Doctor: procedureSummaryListResult[i]["Doctor"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });
            return procedureSummaryArray;
        }

        // navigation button for procedure summary flexgrid
        function updateNavigateButtonsForProcedureSummaryFlexGrid() {
            if (procedureSummaryCollectionView.pageSize <= 0) {
                document.getElementById('navigationPageGridProcedureSummary').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGridProcedureSummary').style.display = 'block';
            if (procedureSummaryCollectionView.pageIndex === 0) {
                btnFirstPageGridProcedureSummary.setAttribute('disabled', 'disabled');
                btnPreviousPageGridProcedureSummary.setAttribute('disabled', 'disabled');
                btnNextPageGridProcedureSummary.removeAttribute('disabled');
                btnLastPageGridProcedureSummary.removeAttribute('disabled');
            } else if (procedureSummaryCollectionView.pageIndex === (procedureSummaryCollectionView.pageCount - 1)) {
                btnFirstPageGridProcedureSummary.removeAttribute('disabled');
                btnPreviousPageGridProcedureSummary.removeAttribute('disabled');
                btnLastPageGridProcedureSummary.setAttribute('disabled', 'disabled');
                btnNextPageGridProcedureSummary.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridProcedureSummary.removeAttribute('disabled');
                btnPreviousPageGridProcedureSummary.removeAttribute('disabled');
                btnNextPageGridProcedureSummary.removeAttribute('disabled');
                btnLastPageGridProcedureSummary.removeAttribute('disabled');
            }
            btnCurrentPageGridProcedureSummary.innerHTML = (procedureSummaryCollectionView.pageIndex + 1) + ' / ' + procedureSummaryCollectionView.pageCount;
        }

        // procedure summary flexgrid
        function createProcedureSummaryFlexGrid() {
            procedureSummaryCollectionView = new wijmo.collections.CollectionView(getProcedureSummaryReportData());
            procedureSummaryCollectionView.canFilter = true;
            procedureSummaryCollectionView.pageSize = 15;

            procedureSummaryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsForProcedureSummaryFlexGrid();
            });

            // Flex Grid
            procedureSummaryFlexGrid = new wijmo.grid.FlexGrid('#procedureSummaryFlexGrid');
            procedureSummaryFlexGrid.initialize({
                columns: [
                            {
                                "header": "Facility",
                                "binding": "User",
                                "allowSorting": true,
                                "width": "1.5*",
                            },
                            {
                                "header": "Tx No",
                                "binding": "TransactionNumber",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Tx Date",
                                "binding": "TransactionDateTime",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Tx Time",
                                "binding": "TransactionTime",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Patient",
                                "binding": "PatientName",
                                "allowSorting": true,
                                "width": "3*",
                            },
                            {
                                "header": "Age",
                                "binding": "Age",
                                "allowSorting": true,
                                "width": "1*",
                            },
                            {
                                "header": "Modality",
                                "binding": "Modality",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Doctor",
                                "binding": "Doctor",
                                "allowSorting": true,
                                "width": "2*",
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: procedureSummaryCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            procedureSummaryFlexGrid.trackChanges = true;

            //Navigation button
            btnFirstPageGridProcedureSummary = document.getElementById('btnMoveToFirstPageGridProcedureSummary');
            btnPreviousPageGridProcedureSummary = document.getElementById('btnMoveToPreviousPageGridProcedureSummary');
            btnNextPageGridProcedureSummary = document.getElementById('btnMoveToNextPageGridProcedureSummary');
            btnLastPageGridProcedureSummary = document.getElementById('btnMoveToLastPageGridProcedureSummary');
            btnCurrentPageGridProcedureSummary = document.getElementById('btnCurrentPageGridProcedureSummary');

            updateNavigateButtonsForProcedureSummaryFlexGrid();

            btnFirstPageGridProcedureSummary.addEventListener('click', function () {
                procedureSummaryCollectionView.moveToFirstPage();
                updateNavigateButtonsForProcedureSummaryFlexGrid();
            });
            btnPreviousPageGridProcedureSummary.addEventListener('click', function () {
                procedureSummaryCollectionView.moveToPreviousPage();
                updateNavigateButtonsForProcedureSummaryFlexGrid();
            });
            btnNextPageGridProcedureSummary.addEventListener('click', function () {
                procedureSummaryCollectionView.moveToNextPage();
                updateNavigateButtonsForProcedureSummaryFlexGrid();
            });
            btnLastPageGridProcedureSummary.addEventListener('click', function () {
                procedureSummaryCollectionView.moveToLastPage();
                updateNavigateButtonsForProcedureSummaryFlexGrid();
            });
        }

        // procedure detail report data
        function getProcedureDetailReportData() {
            var detailStartDateParameterValue = [cboProcedureDetailStartDate.value.getMonth() + 1, cboProcedureDetailStartDate.value.getDate(), cboProcedureDetailStartDate.value.getFullYear()].join('-');
            var detailEndDateParameterValue = [cboProcedureDetailEndDate.value.getMonth() + 1, cboProcedureDetailEndDate.value.getDate(), cboProcedureDetailEndDate.value.getFullYear()].join('-');

            var procedureDetailArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/procedureResult/listByDateRange/' + detailStartDateParameterValue + "/" + detailEndDateParameterValue,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (procedureDetailListResult) {
                    if (procedureDetailListResult.length > 0) {
                        for (i = 0; i < procedureDetailListResult.length; i++) {
                            var facilityRate = 0;
                            if (procedureDetailListResult[i]["FacilityRate"] != null) {
                                facilityRate = procedureDetailListResult[i]["FacilityRate"];
                            }

                            var doctorRate = 0;
                            if (procedureDetailListResult[i]["DoctorRate"] != null) {
                                doctorRate = procedureDetailListResult[i]["DoctorRate"];
                            }

                            var imageRate = 0;
                            if (procedureDetailListResult[i]["ImageRate"] != null) {
                                imageRate = procedureDetailListResult[i]["ImageRate"];
                            }

                            var total = facilityRate + doctorRate + imageRate;

                            procedureDetailArray.push({
                                Id: procedureDetailListResult[i]["Id"],
                                ProcedureId: procedureDetailListResult[i]["ProcedureId"],
                                ModalityProcedureId: procedureDetailListResult[i]["ModalityProcedureId"],
                                ModalityProcedure: procedureDetailListResult[i]["ModalityProcedure"],
                                Result: procedureDetailListResult[i]["Result"],
                                DoctorId: procedureDetailListResult[i]["DoctorId"],
                                Doctor: procedureDetailListResult[i]["Doctor"],
                                DoctorDateTime: procedureDetailListResult[i]["DoctorDateTime"],
                                DoctorTime: procedureDetailListResult[i]["DoctorTime"],
                                Facility: procedureDetailListResult[i]["Facility"],
                                TransactionNumber: procedureDetailListResult[i]["TransactionNumber"],
                                TransactionDateTime: procedureDetailListResult[i]["TransactionDateTime"],
                                PatientName: procedureDetailListResult[i]["Patient"],
                                Modality: procedureDetailListResult[i]["Modality"],
                                FacilityRate: facilityRate,
                                DoctorRate: doctorRate,
                                ImageRate: imageRate,
                                Total: total
                            });
                        }
                    }

                    NProgress.done();
                }
            });
            return procedureDetailArray;
        }

        // navigation button for procedure detail flexgrid
        function updateNavigateButtonsForProcedureDetailFlexGrid() {
            if (procedureDetailCollectionView.pageSize <= 0) {
                document.getElementById('navigationPageGridProcedureDetail').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGridProcedureDetail').style.display = 'block';
            if (procedureDetailCollectionView.pageIndex === 0) {
                btnFirstPageGridProcedureDetail.setAttribute('disabled', 'disabled');
                btnPreviousPageGridProcedureDetail.setAttribute('disabled', 'disabled');
                btnNextPageGridProcedureDetail.removeAttribute('disabled');
                btnLastPageGridProcedureDetail.removeAttribute('disabled');
            } else if (procedureDetailCollectionView.pageIndex === (procedureDetailCollectionView.pageCount - 1)) {
                btnFirstPageGridProcedureDetail.removeAttribute('disabled');
                btnPreviousPageGridProcedureDetail.removeAttribute('disabled');
                btnLastPageGridProcedureDetail.setAttribute('disabled', 'disabled');
                btnNextPageGridProcedureDetail.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridProcedureDetail.removeAttribute('disabled');
                btnPreviousPageGridProcedureDetail.removeAttribute('disabled');
                btnNextPageGridProcedureDetail.removeAttribute('disabled');
                btnLastPageGridProcedureDetail.removeAttribute('disabled');
            }
            btnCurrentPageGridProcedureDetail.innerHTML = (procedureDetailCollectionView.pageIndex + 1) + ' / ' + procedureDetailCollectionView.pageCount;
        }

        // procedure detail flexgrid
        function createProcedureDetailFlexGrid() {
            procedureDetailCollectionView = new wijmo.collections.CollectionView(getProcedureDetailReportData());
            procedureDetailCollectionView.canFilter = true;
            procedureDetailCollectionView.pageSize = 15;

            procedureDetailCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsForProcedureDetailFlexGrid();
            });

            // Flex Grid
            procedureDetailFlexGrid = new wijmo.grid.FlexGrid('#procedureDetailFlexGrid');
            procedureDetailFlexGrid.initialize({
                columns: [
                            {
                                "header": "Facility",
                                "binding": "Facility",
                                "allowSorting": true,
                                "width": 105
                            },
                            {
                                "header": "Tx No",
                                "binding": "TransactionNumber",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "Tx Date",
                                "binding": "TransactionDateTime",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "Patient",
                                "binding": "PatientName",
                                "allowSorting": true,
                                "width": 150
                            },
                            {
                                "header": "Exam Taken",
                                "binding": "Modality",
                                "allowSorting": true,
                                "width": 130
                            },
                            {
                                "header": "Procedure",
                                "binding": "ModalityProcedure",
                                "allowSorting": true,
                                "width": 130
                            },
                            {
                                "header": "Doctor",
                                "binding": "Doctor",
                                "allowSorting": true,
                                "width": 130
                            },
                            {
                                "header": "F. Rate",
                                "binding": "FacilityRate",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "D. Rate",
                                "binding": "DoctorRate",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "I.Rate",
                                "binding": "ImageRate",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "Total",
                                "binding": "Total",
                                "allowSorting": true,
                                "width": 100
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: procedureDetailCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            procedureDetailFlexGrid.trackChanges = true;

            //Navigation button
            btnFirstPageGridProcedureDetail = document.getElementById('btnMoveToFirstPageGridProcedureDetail');
            btnPreviousPageGridProcedureDetail = document.getElementById('btnMoveToPreviousPageGridProcedureDetail');
            btnNextPageGridProcedureDetail = document.getElementById('btnMoveToNextPageGridProcedureDetail');
            btnLastPageGridProcedureDetail = document.getElementById('btnMoveToLastPageGridProcedureDetail');
            btnCurrentPageGridProcedureDetail = document.getElementById('btnCurrentPageGridProcedureDetail');

            updateNavigateButtonsForProcedureDetailFlexGrid();

            btnFirstPageGridProcedureDetail.addEventListener('click', function () {
                procedureDetailCollectionView.moveToFirstPage();
                updateNavigateButtonsForProcedureDetailFlexGrid();
            });
            btnPreviousPageGridProcedureDetail.addEventListener('click', function () {
                procedureDetailCollectionView.moveToPreviousPage();
                updateNavigateButtonsForProcedureDetailFlexGrid();
            });
            btnNextPageGridProcedureDetail.addEventListener('click', function () {
                procedureDetailCollectionView.moveToNextPage();
                updateNavigateButtonsForProcedureDetailFlexGrid();
            });
            btnLastPageGridProcedureDetail.addEventListener('click', function () {
                procedureDetailCollectionView.moveToLastPage();
                updateNavigateButtonsForProcedureDetailFlexGrid();
            });
        }

        $("#procedureSummaryTab").click(function () {
            $("#procedureSummary").show();
            $("#procedureDetail").hide();

            NProgress.start();

            procedureSummaryCollectionView = new wijmo.collections.CollectionView(getProcedureSummaryReportData());
            procedureSummaryCollectionView.canFilter = true;
            procedureSummaryCollectionView.pageSize = 15;

            procedureSummaryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsForProcedureSummaryFlexGrid();
            });

            // Flex Grid
            procedureSummaryFlexGrid.itemsSource = procedureSummaryCollectionView;
            procedureSummaryFlexGrid.trackChanges = true;
        });

        $("#procedureDetailTab").click(function () {
            $("#procedureSummary").hide();
            $("#procedureDetail").show();

            NProgress.start();

            procedureDetailCollectionView = new wijmo.collections.CollectionView(getProcedureDetailReportData());
            procedureDetailCollectionView.canFilter = true;
            procedureDetailCollectionView.pageSize = 15;

            procedureDetailCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsForProcedureDetailFlexGrid();
            });

            // Flex Grid
            procedureDetailFlexGrid.itemsSource = procedureDetailCollectionView;
            procedureDetailFlexGrid.trackChanges = true;
        });

        function btnDashboardOnclick() {
            window.location = "/Software/Index?facilityId=" + getUrlParameter("facilityId");
        }

        function btnModalityProcedureOnclick() {
            window.location = "/Software/Modality?facilityId=" + getUrlParameter("facilityId");
        }

        function btnBodyPartsOnclick() {
            window.location = "/Software/BodyParts?facilityId=" + getUrlParameter("facilityId");
        }

        function btnUserOnclick() {
            window.location = "/Software/Users?facilityId=" + getUrlParameter("facilityId");
        }

        function btnRateOnclick() {
            window.location = "/Software/Rate?facilityId=" + getUrlParameter("facilityId");
        }

        function btnProcedureOnclick() {
            window.location = "/Software/Procedure?facilityId=" + getUrlParameter("facilityId");
        }

        function btnReportsOnclick() {
            window.location = "/Software/Reports?facilityId=" + getUrlParameter("facilityId");
        }

        // on load page
        window.onload = function () {
            NProgress.start()
            cboProcedureSummaryStartDate = new wijmo.input.InputDate('#procedureSummaryStartDate');
            cboProcedureSummaryEndDate = new wijmo.input.InputDate('#procedureSummaryEndDate');
            getProcedureSummaryStartDate();
            getProcedureSummaryEndDate();
            cboProcedureDetailStartDate = new wijmo.input.InputDate('#procedureDetailStartDate');
            cboProcedureDetailEndDate = new wijmo.input.InputDate('#procedureDetailEndDate');
            getProcedureDetailStartDate();
            getProcedureDetailEndDate();

            createProcedureSummaryFlexGrid();
            createProcedureDetailFlexGrid();
        }
    </script>
</body>
</html>
